@use '../../../../variables' as *;

$item-height: 90px;

@include xs {
  p {
    font-size: $s-font-size;
  }
}

.content-box {
  --mat-list-list-item-hover-state-layer-color: var(--surface);
  --mat-list-list-item-focus-state-layer-color: var(--surface);

  border-style: solid;
  border-width: 1px;
  border-radius: $border-radius;
  padding-bottom: $spacing-1;
}

.button-bar {
  padding-top: $spacing-1;
}

@mixin show-button-bar {
  opacity: 1;

  // This needs to contain extension buttons as well
  max-width: 280px;
  pointer-events: initial;
}

.show-bar {
  @include show-button-bar;
}

.button-bar:not(.show-bar) {
  pointer-events: none;
  opacity: 0;
  max-width: 0;
}

.content-box:focus-within,
.content-box:not(.no-pointer-events):hover {
  * > .button-bar {
    @include show-button-bar;
  }
}

.content-box:not(.single-published-item, .primary-border-color) {
  &:not(:hover, :focus) {
    border-color: var(--border);
  }

  &:hover {
    border-color: var(--grey);
  }
}

.content-list {
  margin-top: $item-height + $spacing;

  :not(:last-child) {
    .content-box {
      margin-bottom: $spacing;
    }
  }
}

.item-with-top-space {
  margin-top: -($item-height + $spacing);
}

.button-bar .active {
  @include show-button-bar;
}

@media (hover: none) {
  * > .button-bar {
    @include show-button-bar;
  }
}

.locked-divider {
  position: absolute;
  width: 100%;
  top: 50%;
  transform: translateY(-50%);
  height: 2px;
}

.locked-drag {
  user-select: none;
  font-size: $xs-font-size;
  white-space: nowrap;
  background-color: var(--surface);
  padding: 4px 8px;
  border-width: 2px;
  border-radius: 4px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

  mat-icon {
    width: 14px;
    height: 14px;
    font-size: 14px;
  }
}

.cdk-drag-preview.locked-divider-container {
  opacity: 1;
}

.locked-divider-container {
  margin-bottom: $spacing;
  position: relative;
  height: 48px;
  opacity: 0.7;

  &:not(.static-divider) {
    cursor: grabbing;
  }

  &:hover {
    opacity: 1;
  }

  &:focus {
    opacity: 1;
  }

  &.static-divider {
    opacity: 1;

    .locked-divider {
      background-color: var(--grey);
    }

    .locked-drag {
      border-color: var(--grey);
      border-style: solid;

      span,
      .mat-icon {
        opacity: 0.7;
      }
    }
  }
}

.not-supported {
  cursor: initial;
}

@media (max-width: 500px) {
  .type-icon {
    display: none;
  }
}

.type-icon {
  opacity: 0.5;
}

.content-stats-info {
  font-size: $xs-font-size;
  line-height: 100%;
  padding-top: calc($spacing / 4);

  &:not(.finished-info) {
    color: var(--on-surface-light);
  }
}

.locked-item:not(:hover, .primary-border-color) {
  app-rendered-text {
    color: var(--on-surface-light);
  }

  .content-stats-info {
    opacity: 0.5;
  }

  .type-icon {
    opacity: 0.3;
  }
}

.start-button {
  color: var(--play);
  background-color: var(--play-variant);

  &:disabled {
    color: var(--grey);
    background-color: var(--grey-light);
  }
}

.stop-button {
  color: var(--warn);
  background-color: var(--warn-variant);
}

// Sorting

.cdk-drag-preview.content-box {
  background: var(--surface);
  border: none;
  border-radius: $border-radius;
  box-shadow: 0 0 5px var(--grey);
}

.cdk-drag-placeholder {
  cursor: grabbing;
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drop-list-dragging:not(.cdk-drag-placeholder) {
  cursor: grabbing;
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

// Live mode

.live-info {
  font-size: $xs-font-size;
  line-height: 100%;
  padding-top: calc($spacing / 4);

  mat-icon {
    font-size: $xs-font-size;
    width: $xs-font-size;
    height: $xs-font-size;
  }
}

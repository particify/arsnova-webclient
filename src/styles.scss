@use 'angular-material-css-vars' as mat-css-vars;
@use '@angular/material' as mat;
@use 'app/core/theme/app-theme';
@use 'app/core/theme/dark-theme/dark-theme';
@use 'app/core/theme/light-theme/light-theme';
@use 'variables' as *;
@use 'util';

@include mat.elevation-classes;
@include mat.app-background;

@include mat-css-vars.init-material-css-vars(
    $typography-config: light-theme.$custom-typography
  )
  using($light-theme) {
  .theme-light {
    @include app-theme.theme($light-theme);
  }
}

.theme-dark {
  @include mat.all-component-colors(dark-theme.$dark-theme);
  @include app-theme.theme(dark-theme.$dark-theme, false);
}

html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
}

body {
  background-color: var(--background);
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  width: 100%;
  height: 100%;

  --mat-theme-text-primary-on-background: var(--on-background);
}

[tabindex] {
  outline: none;
}

[hidden] {
  display: none !important;
}

@include lt-md {
  .hide-lg {
    display: none;
  }
}

// Positioning

.relative {
  position: relative;
}

// States

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  left: -10000px;
}

.disabled {
  opacity: 0.5;
}

.disabled-interaction {
  pointer-events: none;
  cursor: default;
}

// Headings & Texts

h1,
h2,
h3,
h4 {
  color: var(--on-surface);
  outline: none;
  font-weight: $font-weight-bold;

  &::before {
    content: none !important;
  }
}

h2 {
  font-size: 24px !important;
}

h3 {
  font-size: 18px !important;
}

h4 {
  font-size: 17px !important;
}

p {
  color: var(--on-surface);
  hyphens: auto;
}

address {
  font-style: normal;
}

a {
  @extend %secondary;
}

strong,
b {
  font-weight: $font-weight-bold;
}

.bold-text {
  font-weight: $font-weight-bold;
}

ul {
  color: var(--on-surface);
}

.smaller-text {
  font-size: $s-font-size;
  margin-bottom: 0;
}

@mixin ellipsis-mixin {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ellipsis {
  @include ellipsis-mixin;
}

@mixin hint-base {
  font-size: 16px;
  font-weight: $font-weight-bold;
  color: var(--on-surface-light);
}

.hint {
  @include hint-base;

  margin: 3em 0 2em;
}

.hint-sm {
  @include hint-base;

  margin: 1.5em 0;
}

// Colors

.primary,
.primary p {
  @extend %primary;
}

.primary-variant,
.primary-variant.mdc-icon-button,
.primary-variant.mdc-button {
  @extend %primary-variant;
}

.primary-background {
  @extend %primary-background;
}

.primary-border {
  @extend %primary-border;
}

.primary-border-color {
  @extend %primary-border-color;
}

.primary-shadow {
  @extend %primary-shadow;
}

.secondary,
.secondary p {
  @extend %secondary;
}

.secondary-variant,
.secondary-variant.mdc-icon-button,
.secondary-variant.mdc-button {
  @extend %secondary-variant;
}

.secondary-background {
  @extend %secondary-background;
}

.theme-dark .on-primary-variant {
  color: var(--palette-primary-contrast-200);
}

.theme-light .on-primary-variant {
  @extend %primary;
}

.blue {
  color: var(--blue) !important;
}

.green {
  color: var(--green) !important;
}

.red {
  color: var(--red) !important;
}

.yellow {
  color: var(--yellow) !important;
}

// Inputs

input,
input:focus {
  color: var(--on-surface);
  caret-color: var(--on-surface);

  &:focus {
    caret-color: var(--on-surface);
  }
}

textarea {
  line-height: 120%;
  color: var(--on-surface);
  caret-color: var(--on-surface);
}

.mat-mdc-form-field {
  color: var(--on-surface);

  ::placeholder {
    color: var(--on-surface);
    opacity: 0.5;
  }
}

.mat-mdc-form-field-type-mat-input:not(.initial-width) {
  width: 100%;
}

.mat-mdc-form-field:not(.mat-form-field-disabled)
  .mat-mdc-form-field-hint:not(.warn, .warn-soft, .success) {
  color: var(--on-surface) !important;
}

.mat-mdc-form-field-hint.warn-soft {
  color: var(--warn-soft) !important;
}

.mat-mdc-form-field-hint.success {
  color: var(--success) !important;
}

.full-width {
  width: 100%;
}

// Dialogs

.mat-mdc-dialog-surface {
  --mat-dialog-container-color: var(--dialog);
}

.mat-mdc-dialog-actions {
  padding: 10px 24px 24px !important;
  gap: 8px;

  .mat-mdc-button-base + .mat-mdc-button-base {
    margin-left: 0 !important;
  }
}

.screen-dialog {
  width: 100%;
  min-width: 100%;
  max-width: 100%;
  height: 100%;
  margin: 0;

  .mat-mdc-dialog-container .mdc-dialog__surface {
    border-radius: 0;
  }
}

.big-dialog-panel {
  width: calc(100vw - $spacing-2 * 2);
  max-width: $card-width !important;
}

@include gt-xs {
  .big-dialog-panel {
    width: calc(100vw - $spacing-4 * 2);
  }
}

.mat-mdc-dialog-title {
  color: var(--on-surface) !important;
  padding: 24px 24px 8px !important;
  margin: 0 !important;

  &::before {
    content: none !important;
  }
}

.mat-mdc-dialog-content {
  outline: none;
  line-height: 1.2 !important;
  letter-spacing: 0 !important;
}

div {
  outline: none;
}

@include gt-md {
  .dialog-margin {
    .mat-mdc-dialog-container {
      margin-left: $navigation-rail-width;
    }
  }
}

// Mat Progress Bar

.custom-height .mdc-linear-progress__bar-inner {
  border: none !important;
  height: 100%;
}

.survey-progress .mdc-linear-progress__bar {
  height: 100%;
}

.survey-progress .mdc-linear-progress__buffer {
  height: 100%;
}

.survey-progress .mdc-linear-progress__bar-inner {
  @extend %secondary-background;
}

.survey-progress .mdc-linear-progress__buffer-bar {
  background-color: var(--background) !important;
}

.progress-background .mdc-linear-progress__buffer-bar {
  background-color: var(--background) !important;
}

.progress-red .mdc-linear-progress__bar-inner {
  background-color: var(--red);
}

.progress-orange .mdc-linear-progress__bar-inner {
  background-color: var(--orange);
}

.progress-yellow .mdc-linear-progress__bar-inner {
  background-color: var(--yellow);
}

.progress-green .mdc-linear-progress__bar-inner {
  background-color: var(--green);
}

.progress-blue .mdc-linear-progress__bar-inner {
  background-color: var(--blue-light);
}

// Mat Tab

.mat-mdc-tab-group,
.mat-mdc-tab-nav-bar {
  @include mat.tabs-overrides(
    (
      inactive-label-text-color: var(--on-surface-light),
      inactive-hover-label-text-color: var(--on-surface),
      inactive-focus-label-text-color: var(--on-surface),
    )
  );
}

@media (min-width: 768px) {
  .tab-group-formatting-bar {
    z-index: 2;
    position: absolute;
    top: 4px;
    right: 0;
  }

  .tab-group-formatting-bar-mobile {
    display: none;
  }
}

@media (max-width: 767px) {
  .tab-group-formatting-bar {
    display: none;
  }

  .tab-group-formatting-bar-mobile div {
    margin-top: 0.5em;
  }
}

.mat-mdc-tab-list {
  flex-grow: initial !important;
}

.tab-icon-link.mat-mdc-tab-link.mdc-tab {
  min-width: unset;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;

  &.mdc-tab--active {
    @extend %primary-variant;
  }
}

.tab-icon-link .mdc-tab-indicator {
  display: none;
}

// Mat Form Field

.mat-mdc-text-field-wrapper.mdc-text-field--outlined
  .mat-mdc-form-field-infix
  input {
  padding-top: 2px;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: var(--background) !important;
}

.no-field-hint .mat-mdc-form-field-subscript-wrapper {
  height: 0;
}

.number-input-small .mat-mdc-form-field-infix {
  min-height: unset;
  padding: 6px 0 10px !important;
  width: 32px;
}

.smaller-select-input .mat-mdc-form-field-infix {
  padding: 10px 0 !important;
  min-height: unset;
}

.minimal-height-input .mat-mdc-form-field-infix {
  --mat-form-field-container-height: 0;

  padding: 8px 0 !important;
  font-size: 14px;
  width: 600px;
}

.minimal-height-select-input {
  min-width: 200px !important;
}

.minimal-height-select-input .mat-mdc-form-field-infix {
  padding: 8px 0 !important;
  min-height: unset;
  max-height: 36px;
}

.smaller-input .mat-mdc-form-field-infix {
  padding: $spacing-1 0 !important;
  min-height: 48px;
}

.surface-input .mat-mdc-text-field-wrapper,
.surface-input .mat-mdc-form-field-focus-overlay {
  background-color: var(--surface) !important;
}

.surface-input .mdc-text-field--no-label {
  padding: 5px 0 0;
}

// Choice answer buttons

.answer-radio-button .mdc-radio {
  --mat-radio-unselected-icon-color: var(--grey);
  --mat-radio-ripple-color: transparent;
  --mat-radio-checked-ripple-color: transparent;
}

.choice-answer {
  margin-left: 4px;
}

.choice-answer .mdc-form-field {
  width: 100%;

  & > label {
    cursor: pointer;
    min-height: 48px;
    width: 100%;
    display: flex;
    flex-direction: column;
    place-content: center;
    padding-right: 16px;
  }
}

.disabled-choice-answer .mdc-form-field > label {
  cursor: default;
}

.answer-checkbox .mdc-checkbox__ripple,
.answer-checkbox .mdc-checkbox--selected {
  background: transparent !important;
}

.answer-checkbox .mdc-checkbox {
  --mat-checkbox-unselected-icon-color: var(--grey);
  --mat-checkbox-unselected-hover-state-layer-color: transparent;
  --mat-checkbox-unselected-pressed-state-layer-color: transparent;
}

// Mat slide toggle

.theme-dark .mat-mdc-slide-toggle.mat-accent {
  --mat-slide-toggle-selected-focus-state-layer-color: var(
    --palette-accent-600
  );
  --mat-slide-toggle-selected-handle-color: var(--palette-accent-900);
  --mat-slide-toggle-selected-hover-state-layer-color: var(
    --palette-accent-600
  );
  --mat-slide-toggle-selected-pressed-state-layer-color: var(
    --palette-accent-600
  );
  --mat-slide-toggle-selected-focus-handle-color: var(--palette-accent-900);
  --mat-slide-toggle-selected-hover-handle-color: var(--palette-accent-900);
  --mat-slide-toggle-selected-pressed-handle-color: var(--palette-accent-900);
  --mat-slide-toggle-selected-focus-track-color: var(--palette-accent-300);
  --mat-slide-toggle-selected-hover-track-color: var(--palette-accent-300);
  --mat-slide-toggle-selected-pressed-track-color: var(--palette-accent-300);
  --mat-slide-toggle-selected-track-color: var(--palette-accent-300);
}

mat-slide-toggle:not(.no-label) .mat-internal-form-field {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  gap: $spacing-2;

  label {
    margin-left: 0;
  }
}

// Mat Select

.mat-mdc-select-panel {
  background: var(--surface);
}

.mat-mdc-select-disabled .mat-mdc-select-value-text {
  color: var(--grey);
}

.mat-mdc-option {
  color: var(--on-surface);
}

// Mat List

.mat-mdc-list-item {
  height: auto;
  outline: none;
}

.mat-mdc-list-base .mat-mdc-list-item {
  min-height: 48px;
  height: auto !important;
}

.mat-mdc-list-base {
  padding: 0 !important;
}

.mat-mdc-list {
  padding: 0;
  outline: none;
  border-radius: 4px;
}

.bottom-border {
  border-bottom: solid 1px var(--border);
}

.mat-mdc-list-item.bottom-border:last-of-type {
  border-bottom: solid 1px transparent;
}

.mat-mdc-list-item.full-width-list-item {
  padding: 0;
}

.primary-shadow-hover:hover {
  border-color: transparent;
  @extend %primary-shadow;
}

.primary-shadow-focus:focus {
  border-color: transparent;
  @extend %primary-shadow;
}

.primary-shadow-always {
  @extend %primary-shadow;
}

// Mat Table

.mat-mdc-table {
  background-color: inherit;
}

.mat-mdc-cell,
.mat-mdc-header-cell {
  color: var(--on-surface);
}

// Buttons

.mat-mdc-icon-button.mat-mdc-button-base {
  height: $icon-button-size !important;
  width: $icon-button-size !important;
  padding: $spacing !important;

  &:not(.mat-primary, .mat-accent, .mat-warn) {
    --mat-icon-button-icon-color: var(--on-surface-light);
  }
}

.mat-mdc-icon-button .mat-mdc-button-touch-target {
  height: $icon-button-size !important;
  width: $icon-button-size !important;
}

.mat-mdc-button:not(
  [disabled],
  .nav-button,
  .mat-primary,
  .mat-accent,
  .mat-warn,
  .mat-mdc-snack-bar-action
) {
  opacity: 0.8;

  --mat-button-text-label-text-color: var(--on-surface);

  &:hover {
    opacity: 1;
  }
}

.mat-mdc-button .mdc-button__label {
  max-width: 100%;
}

.button-text {
  color: var(--on-surface);
  padding-left: 5px;
  font-size: 16px;
}

.login-button {
  width: 100%;
  margin: 5px 0;
}

.mobile-add-hide {
  transform: translateY(calc(4vw + 56px)) !important;
}

.mobile-add.mat-mdc-fab {
  position: fixed !important;
  transition: transform 100ms ease-out !important;
  right: 4vw;
  bottom: 4vw;
  z-index: 3;
  margin: 0 !important;
}

.mobile-add-above-nav {
  transform: translateY(-56px) !important;
}

.no-ripple .mat-mdc-button-persistent-ripple {
  display: none;
}

.no-ripple .mat-mdc-button-ripple * {
  display: none;
}

// Links

.action-link {
  font-size: smaller;
  text-decoration: none;
  font-weight: $font-weight-bold;
}

.after-text-link {
  padding-left: 10px;
  margin-top: 1em;
}

// Icons

.icon-warn-soft {
  color: var(--warn-soft);
}

// Card

mat-card {
  width: calc(100vw - $spacing-2 * 2);
  max-width: $card-width;
  padding: $spacing-2;
  color: var(--on-surface);
  background-color: var(--surface);
}

@include gt-xs {
  mat-card {
    width: calc(100vw - $spacing-4 * 2);
  }
}

.mat-mdc-card-title {
  margin-bottom: 8px !important;
}

.login-card {
  width: $smaller-card-width;
  max-width: 100%;
  padding: 2em !important;

  @media (max-width: 500px) {
    padding: 1.5em !important;
  }
}

.no-card-appearance {
  transition: none !important;
  padding: 0 $spacing $spacing;
  margin: 0;
  box-shadow: none !important;
}

// Badge

.icon-badge .mat-badge-content {
  top: -2px !important;
  right: -2px !important;
}

// Mat expansion panel

.mat-expansion-indicator::after {
  color: var(--on-surface);
}

.mat-expansion-panel {
  background-color: var(--surface) !important;
}

.settings-panel > .mat-expansion-panel-header.mat-expanded {
  height: unset;
}

.settings-panel > .mat-expansion-panel-header {
  padding: 0.8em 1.5em;
}

// Menu

.mat-mdc-menu-item {
  --mat-menu-item-label-text-size: 14px;
}

.selected-menu-item {
  @extend %primary;

  font-weight: $font-weight-bold;
}

.mat-mdc-menu-panel {
  background-color: var(--dialog);
}

.mat-mdc-menu-content {
  background-color: var(--dialog);
}

.mat-mdc-menu-item-text {
  max-width: 100%;
}

.mid-size-panel.mdc-menu-surface.mat-mdc-select-panel {
  @media (max-width: 767px) {
    min-width: 90vw;
  }

  @media (min-width: 768px) {
    min-width: 400px;
  }
}

.bigger-panel.mdc-menu-surface.mat-mdc-select-panel {
  @media (max-width: 767px) {
    min-width: 90vw;
    max-height: 60vh;
  }

  @media (min-width: 768px) {
    min-width: 500px;
    max-height: 70vh;
  }
}

.mat-mdc-menu-panel.wider-panel {
  background-color: var(--dialog);
  padding: $spacing-2 $spacing-3;
  min-width: 400px;

  @include xs {
    min-width: calc(100vw - $spacing-2 * 2);
  }
}

@include gt-md {
  .mat-mdc-menu-panel.series-menu {
    position: absolute;
    left: $navigation-rail-width;
    top: -64px;
  }
}

.mat-mdc-menu-item:not([disabled])
  > .mat-icon:not(.mat-primary, .mat-warn, .icon-important) {
  color: var(--on-surface-light);
}

// Snackbar

.mat-mdc-snack-bar-container {
  --mat-snack-bar-button-color: var(--surface);
  --mat-snackbar-supporting-text-color: var(--surface);
}

.presentation-snack-bar {
  padding-bottom: 70px;
}

// RenderedTextComponent
// This cannot be handled in the component itself because of custom rendering of the text-container's content.

.rendered-list-preview > * > img {
  height: 40px;
  margin: 0;
}

.rendered-text.text-container {
  img {
    max-width: 100%;
    max-height: 80vh;
  }
}

.rendered-text {
  strong {
    font-weight: $font-weight-extra-bold;
  }
}

app-rendered-text:not(.rendered-list-preview-container, .no-full-width) {
  width: 100%;
}

.preview-container {
  margin-top: 10px;
  min-height: 76px;
  padding: 12px;
}

.rendered-list-preview-container {
  position: relative;

  @include ellipsis-mixin;

  // 2 * margin (1em) + text height (19px)
  max-height: calc(2em + 19px);
}

.minimal-height-list-preview {
  height: 28px;
}

.rendered-list-preview {
  h1,
  h2,
  h3,
  h4 {
    font-size: 1em !important;
    margin: 1em 0;
  }

  & > p {
    @include ellipsis-mixin;
  }
}

@include xs {
  .rendered-list-preview > p {
    font-size: $s-font-size;
  }
}

.rendered-list-preview > .katex-block {
  height: 100%;
  margin: 0;
}

// Animations

@mixin bottom-fade-out {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 16px;
}

.rendered-list-preview-container::after {
  @include bottom-fade-out;

  background-image: linear-gradient(to bottom, transparent, var(--surface));
}

@keyframes border-lightning {
  0% {
    border-color: inherit;
  }

  50% {
    border-color: var(--grey-lighter);
  }

  100% {
    border-color: inherit;
  }
}

// Chips

.no-flex-flow .mdc-evolution-chip-set__chips {
  flex-flow: unset;
}

// Drawer

// This is needed for full height of drawer backdrop on mobile devices
.mat-drawer-backdrop.mat-drawer-shown {
  position: fixed;
  top: -$mobile-bar-height;
}

.button-width-additional-icon {
  .mdc-button__label {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .mdc-switch .mdc-switch__ripple {
    height: 0;
    width: 0;
  }
}

// Hiding elements

@mixin hide {
  visibility: hidden;
  display: none !important;
}

@include lt-md {
  .hide-lt-md {
    @include hide;
  }
}

@include gt-md {
  .hide-gt-md {
    @include hide;
  }
}

@include lt-lg {
  .hide-lt-lg {
    @include hide;
  }
}

@include gt-lg {
  .hide-gt-lg {
    @include hide;
  }
}

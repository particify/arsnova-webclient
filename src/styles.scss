@use '@angular/material' as mat;
@import 'theme/dark-theme/dark-theme';
@import 'theme/arsnova-theme/arsnova-theme';
@import 'theme/theme';
@import 'variables';
@include mat.core;

@include mat.all-component-themes($arsnova-theme);

.theme-dark {
  @include mat.all-component-colors($dark-theme);
}

body {
  background-color: var(--background);
  font-family: Roboto, 'Helvetica Neue', sans-serif;
  width: 100%;
  height: 100%;

  --mdc-theme-text-primary-on-background: var(--on-background);
}

[tabindex] {
  outline: none;
}

[hidden] {
  display: none !important;
}

@media (max-width: 1000px) {
  .hide-lg {
    display: none;
  }
}

// Positioning

.relative {
  position: relative;
}

// States

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  left: -10000px;
}

.disabled {
  opacity: 0.5;
}

// Headings & Texts

h1,
h2,
h3,
h4 {
  color: var(--on-surface);
  outline: none;
  font-weight: $font-weight-bold;

  &::before {
    content: none !important;
  }
}

h2 {
  font-size: 24px !important;
}

h3 {
  font-size: 18px !important;
}

h4 {
  font-size: 17px !important;
}

p {
  color: var(--on-surface);
  hyphens: auto;
}

address {
  font-style: normal;
}

a {
  color: var(--secondary);
}

strong,
b {
  font-weight: $font-weight-bold;
}

ul {
  color: var(--on-surface);
}

.smaller-text {
  font-size: smaller;
  margin-bottom: 0;
}

@mixin ellipsis-mixin {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.ellipsis {
  @include ellipsis-mixin;
}

@mixin hint-base {
  font-size: 16px;
  font-weight: $font-weight-bold;
  opacity: 0.7;
}

.hint {
  @include hint-base;

  margin: 3em 0 2em;
}

.hint-sm {
  @include hint-base;

  margin: 1.5em 0;
}

// Inputs

input,
input:focus {
  color: var(--on-surface);
  caret-color: var(--on-surface);

  &:focus {
    caret-color: var(--on-surface);
  }
}

textarea {
  line-height: 120%;
  color: var(--on-surface);
  caret-color: var(--on-surface);
}

.mat-mdc-form-field {
  color: var(--on-surface);

  ::placeholder {
    color: var(--on-surface);
    opacity: 0.5;
  }
}

.mat-mdc-form-field-type-mat-input:not(.initial-width) {
  width: 100%;
}

.mat-mdc-form-field:not(.mat-form-field-disabled)
  .mat-mdc-form-field-hint:not(.warn, .warn-soft, .success) {
  color: var(--on-surface) !important;
}

.mat-mdc-form-field-hint.warn {
  color: var(--warn) !important;
}

.mat-mdc-form-field-hint.warn-soft {
  color: var(--warn-soft) !important;
}

.mat-mdc-form-field-hint.success {
  color: var(--green) !important;
}

.mat-mdc-form-field-error {
  color: var(--warn) !important;
}

.full-width {
  width: 100%;
}

// Dialogs

.mat-mdc-dialog-surface {
  --mdc-dialog-container-color: var(--dialog);
}

.mat-mdc-dialog-actions {
  padding: 10px 24px 24px !important;
}

.mat-mdc-dialog-actions .mat-mdc-button-base {
  margin-left: 10px !important;
}

.screen-dialog {
  width: 100%;
  min-width: 100%;
  max-width: 100%;
  height: 100%;
  margin: 0;

  .mat-mdc-dialog-container .mdc-dialog__surface {
    border-radius: 0;
  }
}

.mat-mdc-dialog-title {
  color: var(--on-surface) !important;
  padding: 24px 24px 8px !important;
  margin: 0 !important;

  &::before {
    content: none !important;
  }
}

.mat-mdc-dialog-content {
  outline: none;
  line-height: 1.2 !important;
  letter-spacing: 0 !important;
}

div {
  outline: none;
}

@media (min-width: 1000px) {
  .dialog-margin {
    .mat-mdc-dialog-container {
      margin-left: $navigation-rail-width;
    }
  }
}

// Mat Progress Bar

.mdc-linear-progress__bar-inner {
  border: none !important;
  height: 100%;
}

.survey-progress .mdc-linear-progress__bar-inner {
  background-color: var(--secondary);
}

.survey-progress .mdc-linear-progress__buffer-bar {
  background-color: var(--background) !important;
}

.statistic-status-good .mdc-linear-progress__bar-inner {
  background-color: var(--green);
}

.statistic-status-good .mdc-linear-progress__buffer-bar {
  background-color: var(--green-light);
}

.statistic-status-okay .mdc-linear-progress__bar-inner {
  background-color: var(--yellow);
}

.statistic-status-okay .mdc-linear-progress__buffer-bar {
  background-color: var(--yellow-light);
}

.statistic-status-bad .mdc-linear-progress__bar-inner {
  background-color: var(--red);
}

.statistic-status-bad .mdc-linear-progress__buffer-bar {
  background-color: var(--red-light);
}

.progress-primary .mdc-linear-progress__bar-inner {
  background-color: var(--primary);
}

.progress-primary .mdc-linear-progress__buffer-bar {
  background-color: var(--primary-variant);
}

// Mat Tab

.mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab__text-label {
  color: var(--on-surface) !important;
}

@media (min-width: 768px) {
  .tab-group-formatting-bar {
    z-index: 2;
    position: absolute;
    top: 4px;
    right: 0;
  }

  .tab-group-formatting-bar-mobile {
    display: none;
  }
}

@media (max-width: 767px) {
  .tab-group-formatting-bar {
    display: none;
  }

  .tab-group-formatting-bar-mobile div {
    margin-top: 0.5em;
  }
}

.mat-mdc-tab-list {
  flex-grow: initial !important;
}

// Mat Form Field

.mat-mdc-text-field-wrapper.mdc-text-field--outlined
  .mat-mdc-form-field-infix
  input {
  padding-top: 4px;
}

.mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: var(--background) !important;
}

.no-field-hint .mat-mdc-form-field-subscript-wrapper {
  height: 0;
}

.number-input-small .mat-mdc-form-field-infix {
  min-height: unset;
  padding: 6px 0 10px !important;
  width: 42px;
}

.smaller-select-input .mat-mdc-form-field-infix {
  padding: 12px 0 !important;
  min-height: unset;
}

.active-input .mdc-text-field--outlined {
  margin: 4px 0 6px;
  transition: padding-left 0.5s;
}

.active-input .mat-mdc-form-field-infix {
  min-height: unset;
}

.active-input
  .mat-mdc-text-field-wrapper.mdc-text-field--outlined
  .mat-mdc-form-field-infix {
  padding: 10px 0;
  border: none;
}

.active-input
  .mat-mdc-text-field-wrapper.mdc-text-field--outlined
  .mat-mdc-form-field-infix
  input {
  padding-top: 0;
}

.hide-editing .mdc-text-field--outlined {
  padding-left: 0;
}

.hide-editing .mdc-notched-outline__leading,
.hide-editing .mdc-notched-outline__trailing {
  border: none !important;
}

.form-spacer {
  margin-bottom: 16px;
  margin-right: 16px;
}

.surface-input .mat-mdc-text-field-wrapper,
.surface-input .mat-mdc-form-field-focus-overlay {
  background-color: var(--surface) !important;
}

.surface-input .mdc-text-field--no-label {
  padding: 5px 0 0;
}

// Choice answer buttons

.answer-radio-button .mdc-radio {
  --mdc-radio-selected-hover-icon-color: var(--primary);
  --mdc-radio-selected-icon-color: var(--primary);
  --mdc-radio-selected-pressed-icon-color: var(--primary);
  --mat-mdc-radio-checked-ripple-color: transparent;
  --mdc-radio-disabled-selected-icon-color: var(--grey);
  --mdc-radio-disabled-unselected-icon-color: var(--grey);
  --mdc-radio-unselected-focus-icon-color: var(--primary);
  --mdc-radio-unselected-hover-icon-color: var(--primary);
  --mdc-radio-unselected-icon-color: var(--grey);
  --mdc-radio-unselected-pressed-icon-color: var(--primary);
  --mat-mdc-radio-ripple-color: transparent;
}

.choice-answer {
  margin-left: 4px;
}

.choice-answer .mdc-form-field {
  width: 100%;

  & > label {
    cursor: pointer;
    min-height: 50px;
    width: 100%;
    display: flex;
    flex-direction: column;
    place-content: center;
    padding-right: 16px;
  }
}

.answer-checkbox .mdc-checkbox__ripple,
.answer-checkbox .mdc-checkbox--selected {
  background: transparent !important;
}

.answer-checkbox .mdc-checkbox {
  --mdc-checkbox-selected-checkmark-color: var(--on-primary);
  --mdc-checkbox-selected-focus-icon-color: var(--primary);
  --mdc-checkbox-selected-hover-icon-color: var(--primary);
  --mdc-checkbox-selected-icon-color: var(--primary);
  --mdc-checkbox-selected-pressed-icon-color: var(--primary);
  --mdc-checkbox-unselected-focus-icon-color: var(--primary);
  --mdc-checkbox-unselected-hover-icon-color: var(--primary);
  --mdc-checkbox-disabled-selected-icon-color: var(--grey);
  --mdc-checkbox-disabled-unselected-icon-color: var(--grey-light);
  --mdc-checkbox-unselected-icon-color: var(--grey);
  --mdc-checkbox-unselected-pressed-icon-color: var(--primary);
}

// Mat Select

.mat-mdc-select-panel {
  background: var(--surface);
}

.mat-mdc-select-disabled .mat-mdc-select-value-text {
  color: var(--grey);
}

.mdc-text-field--disabled .mdc-floating-label {
  color: var(--grey) !important;
}

.mat-mdc-option {
  color: var(--on-surface);
}

// Mat List

.mat-mdc-list-item {
  height: auto;
  outline: none;
}

.mat-mdc-list-base .mat-mdc-list-item {
  min-height: 48px;
  height: auto !important;
}

.mat-mdc-list-base {
  padding: 0 !important;
}

.mat-mdc-list {
  padding: 0;
  outline: none;
  border-radius: 4px;
}

.bottom-border {
  border-bottom: solid 1px var(--border);
}

.mat-mdc-list-item.bottom-border:last-of-type {
  border-bottom: solid 1px transparent;
}

.mat-mdc-list-item.full-width-list-item {
  padding: 0;
}

// Mat Table

.mat-mdc-table {
  background-color: inherit;
}

.mat-mdc-cell,
.mat-mdc-header-cell {
  color: var(--on-surface);
}

// Buttons

.mat-mdc-icon-button.mat-mdc-button-base {
  height: 40px !important;
  width: 40px !important;
  padding: 8px !important;

  --mdc-icon-button-icon-color: var(--on-surface);
}

.mat-mdc-icon-button .mat-mdc-button-touch-target {
  height: 40px !important;
  width: 40px !important;
}

.mat-mdc-button,
.mat-mdc-raised-button,
.mat-mdc-outlined-button {
  .mat-icon {
    height: 20px;
    width: 20px;
    font-size: 20px;
    margin-bottom: 2px;
  }
}

.mat-mdc-button:not([disabled], .nav-button) {
  opacity: 0.8;

  --mdc-text-button-label-text-color: var(--on-surface);

  &:hover {
    opacity: 1;
  }
}

.button-primary:not([disabled]) {
  background-color: var(--primary) !important;
  color: var(--on-primary) !important;
}

.button-warn {
  background-color: var(--warn) !important;
  color: var(--on-warn) !important;
}

.button-text {
  color: var(--on-surface);
  padding-left: 5px;
  font-size: 16px;
}

.login-button {
  width: 100%;
  margin: 5px 0;
}

[role='button'],
[role='listitem'],
button {
  &:focus-visible {
    outline: 2px solid var(--secondary) !important;
  }

  &:focus:not(:focus-visible) {
    outline: none;
  }
}

.stroked-primary.mat-mdc-outlined-button:not([disabled], .btn-animated) {
  color: var(--primary) !important;
  border-color: var(--primary) !important;
}

.stroked-warn.mat-mdc-outlined-button {
  color: var(--warn) !important;
}

.mobile-add-hide {
  transform: translateY(calc(4vw + 56px)) !important;
}

.mobile-add.mat-mdc-fab {
  position: fixed !important;
  transition: transform 100ms ease-out !important;
  right: 4vw;
  bottom: 4vw;
  z-index: 3;
  margin: 0 !important;
}

.mobile-add-above-nav {
  transform: translateY(-56px) !important;
}

.no-ripple .mat-mdc-button-persistent-ripple {
  display: none;
}

// Links

.action-link {
  font-size: smaller;
  text-decoration: none;
  font-weight: $font-weight-bold;
}

.after-text-link {
  padding-left: 10px;
  margin-top: 1em;
  color: var(--secondary);
}

// Icons

.icon-primary {
  color: var(--primary) !important;
}

.icon-warn {
  color: var(--warn) !important;
}

.icon-warn-soft {
  color: var(--warn-soft);
}

// Colors

.blue {
  color: var(--blue) !important;
}

.green {
  color: var(--green) !important;
}

.red {
  color: var(--red) !important;
}

.yellow {
  color: var(--yellow) !important;
}

// Card

.mat-mdc-card {
  width: 92vw;
  max-width: 832px;
  padding: 1em;
  color: var(--on-surface);
  background-color: var(--surface) !important;
}

.mat-mdc-card-title {
  margin-bottom: 8px !important;
}

.card-container {
  width: 100%;
  max-width: 832px;
  position: relative;
  perspective: 3000px;
}

.card {
  width: 100%;
  height: 100%;
  position: relative;
  transition: all 500ms;
  transform-origin: 50% 50%;
}

.side {
  position: relative;
  transition: 400ms;
}

.card .back {
  background-color: var(--surface);
  transform: rotateY(180deg);
}

.card.flipped {
  transform: rotateY(180deg);
}

.invisible-card-content {
  height: 0;
  opacity: 0;
  pointer-events: none;
  display: none;
}

.invisible-card {
  box-shadow: none !important;
  background-color: var(--background) !important;
}

.login-card {
  width: 400px;
  max-width: 100%;
  padding: 2em !important;

  @media (max-width: 500px) {
    padding: 1.5em !important;
  }
}

.presentation-card {
  transition: none !important;
  padding: 0 !important;
  margin: 0;
  box-shadow: none !important;
}

// Badge

.mat-badge-content {
  background: var(--secondary) !important;
  color: var(--on-secondary) !important;
}

.icon-badge .mat-badge-content {
  top: -2px !important;
  right: -2px !important;
}

// Mat expansion panel

.mat-expansion-indicator::after {
  color: var(--on-surface);
}

.mat-expansion-panel {
  background-color: var(--surface) !important;
}

.settings-panel > .mat-expansion-panel-header.mat-expanded {
  height: unset;
}

.settings-panel > .mat-expansion-panel-header {
  padding: 0.8em 1.5em;
}

// Menu

.mat-mdc-menu-item .mdc-list-item__primary-text {
  font-size: 14px !important;
}

.mat-mdc-menu-panel {
  background-color: var(--dialog);
}

.selected .mdc-list-item__primary-text {
  font-weight: $font-weight-bold !important;
}

.mat-mdc-menu-content {
  background-color: var(--dialog);
}

.bigger-panel.mdc-menu-surface.mat-mdc-select-panel {
  @media (max-width: 767px) {
    min-width: 90vw;
    max-height: 60vh;
  }

  @media (min-width: 768px) {
    min-width: 500px;
    max-height: 70vh;
  }
}

.mat-mdc-menu-panel.mat-mdc-menu-panel.wider-panel {
  max-width: 500px;

  @media (max-width: 520px) {
    // full width - app padding
    max-width: 92%;

    // app padding
    margin-left: 4%;
  }
}

@media (min-width: 1000px) {
  .mat-mdc-menu-panel.series-menu {
    position: absolute;
    left: $navigation-rail-width;
    top: -64px;
  }
}

.mat-mdc-menu-item:not([disabled])
  .mat-icon:not(.icon-primary, .icon-warn, .icon-important) {
  color: var(--on-surface);
  opacity: 0.7;
}

// Snackbar

.mat-mdc-snack-bar-container {
  --mat-mdc-snack-bar-button-color: var(--surface);
}

.presentation-snack-bar {
  padding-bottom: 70px;
}

// RenderedTextComponent
// This cannot be handled in the component itself because of custom rendering of the text-container's content.

.rendered-list-preview > * > img {
  height: 40px;
  margin: 0;
}

.rendered-text.text-container {
  img {
    max-width: 100%;
    max-height: 80vh;
  }
}

app-rendered-text:not(.rendered-list-preview-container, .no-full-width) {
  width: 100%;
}

.preview-container {
  margin-top: 10px;
  min-height: 76px;
  padding: 12px;
}

.rendered-list-preview-container {
  position: relative;

  @include ellipsis-mixin;

  // 2 * margin (1em) + text height (19px)
  max-height: calc(2em + 19px);
}

.rendered-list-preview {
  h1,
  h2,
  h3,
  h4 {
    font-size: 1em !important;
    margin: 1em 0;
  }

  & > p {
    @include ellipsis-mixin;
  }
}

.rendered-list-preview > .katex-block {
  height: 100%;
  margin: 0;
}

@mixin bottom-fade-out {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 1;
  width: 100%;
  height: 16px;
}

.rendered-list-preview-container:not(.bg-unlocked)::after {
  @include bottom-fade-out;

  background-image: linear-gradient(to bottom, transparent, var(--surface));
}

.rendered-list-preview-container.bg-unlocked::after {
  @include bottom-fade-out;

  background-image: linear-gradient(to bottom, transparent, var(--unlocked));
}
